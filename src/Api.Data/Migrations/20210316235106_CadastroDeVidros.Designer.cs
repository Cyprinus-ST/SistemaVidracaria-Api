// <auto-generated />
using System;
using Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210316235106_CadastroDeVidros")]
    partial class CadastroDeVidros
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Domain.Entities.Budget.BudgetEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<Guid>("IdCostumer")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Status")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Budget");
                });

            modelBuilder.Entity("Api.Domain.Entities.Colors.AluminiumColorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AluminiumColor");
                });

            modelBuilder.Entity("Api.Domain.Entities.Colors.GlassColorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("GlassColor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Azul"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Box Incolor"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Box Antílope"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Box Bronze"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Box Fumê"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Box Verde"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Box Mini Boreal"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Box Quadrato"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Bronze"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Espelho"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Espelho Bisotê"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Espelho Bronze"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Espelho Fumê"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Fumê"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Fumê Padrão"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Incolor"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Jateado Fumê"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Jateado Incolor"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Jateador Verde"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Lacobel Branco"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Lacobel Preto"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Lacobel Vermelho"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Laminado Fumê"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Laminado Incolor"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Laminado Verde"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Mini Boreal"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Pontilhado"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Refletivo Champagnhe"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Refletivo Cinza"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Refletivo Verde"
                        },
                        new
                        {
                            Id = 32,
                            Description = "Serigrafado"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Serigrafado Extra Clear Branco"
                        },
                        new
                        {
                            Id = 34,
                            Description = "Serigrafado Extra Clear Nevado"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Serigrafado Extra Clear Branco"
                        },
                        new
                        {
                            Id = 36,
                            Description = "Serigrafado Fume Preto"
                        },
                        new
                        {
                            Id = 37,
                            Description = "Serigrafado Incolor Branco"
                        },
                        new
                        {
                            Id = 38,
                            Description = "Serigrafado Incolor Colorido"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Serigrafado Incolor Nevado"
                        },
                        new
                        {
                            Id = 40,
                            Description = "Temperado Laminado Bronze"
                        },
                        new
                        {
                            Id = 41,
                            Description = "Temperado Laminado Fumê"
                        },
                        new
                        {
                            Id = 42,
                            Description = "Temperado Laminado Incolor"
                        },
                        new
                        {
                            Id = 43,
                            Description = "Temperado Laminado Verde"
                        },
                        new
                        {
                            Id = 44,
                            Description = "Temperado Quadrato"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Verde"
                        },
                        new
                        {
                            Id = 46,
                            Description = "Verde Padrão"
                        },
                        new
                        {
                            Id = 47,
                            Description = "Não Selecionar"
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.Colors.StructureColorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("StructureColor");
                });

            modelBuilder.Entity("Api.Domain.Entities.Costumer.CostumerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Costumer");
                });

            modelBuilder.Entity("Api.Domain.Entities.Material.MaterialEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("Api.Domain.Entities.Plan.PlanEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("Installments")
                        .HasMaxLength(100)
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Plan");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2216f112-4c4e-4fdc-b300-eda19d5de4e4"),
                            CreateAt = new DateTime(2021, 3, 16, 20, 51, 6, 378, DateTimeKind.Local).AddTicks(2334),
                            Description = "Plano Experimental",
                            Installments = 0.0,
                            Name = "Plano Experimental",
                            Status = "Ativo",
                            UpdateAt = new DateTime(2021, 3, 16, 20, 51, 6, 378, DateTimeKind.Local).AddTicks(2343)
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.Plan.PlanUserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateAcquisition")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateExpired")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("idPlan")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("idUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("statusPlan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("PlanUser");
                });

            modelBuilder.Entity("Api.Domain.Entities.Project.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descripition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberGlass")
                        .HasColumnType("int");

                    b.Property<int>("ProjectType")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Api.Domain.Entities.Project.ProjectTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProjectType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Janela"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Porta"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Fixo"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Box"
                        },
                        new
                        {
                            Id = 5,
                            Type = "Fechamento de Pia"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Espelho"
                        },
                        new
                        {
                            Id = 7,
                            Type = "Bascula/Maxian-ar"
                        },
                        new
                        {
                            Id = 8,
                            Type = "Guarda-Corpo"
                        },
                        new
                        {
                            Id = 9,
                            Type = "Portas Staley"
                        },
                        new
                        {
                            Id = 10,
                            Type = "Janelas Staley"
                        },
                        new
                        {
                            Id = 11,
                            Type = "Reposição"
                        },
                        new
                        {
                            Id = 12,
                            Type = "Versatik kits"
                        },
                        new
                        {
                            Id = 13,
                            Type = "Slide Door"
                        },
                        new
                        {
                            Id = 14,
                            Type = "Projeto Personalizado"
                        },
                        new
                        {
                            Id = 15,
                            Type = "Portas Retráteis"
                        },
                        new
                        {
                            Id = 16,
                            Type = "Ideia Glass"
                        },
                        new
                        {
                            Id = 17,
                            Type = "Sacadas"
                        },
                        new
                        {
                            Id = 99,
                            Type = "Não selecionar"
                        });
                });

            modelBuilder.Entity("Api.Domain.Entities.ProjectBudgetEntity.ProjectBudgetEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HeightValue")
                        .HasColumnType("float");

                    b.Property<int>("IdAluminumColor")
                        .HasColumnType("int");

                    b.Property<Guid>("IdBudget")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdGlassColor")
                        .HasColumnType("int");

                    b.Property<Guid>("IdProject")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("IdStructureColor")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MeterValue")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<double>("UnitValue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("WidthValue")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ProjectBudget");
                });

            modelBuilder.Entity("Api.Domain.Entities.Provider.ProviderEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(350)
                        .HasColumnType("nvarchar(350)");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("Api.Domain.Entities.Tutorial.TutorialEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tutorial");
                });

            modelBuilder.Entity("Api.Domain.Entities.User.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CEP")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CPF")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Complement")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Neighborhood")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Number")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("PathAvatar")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Phone")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("State")
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<string>("Street")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("TokenPassword")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd43824d-95de-4b40-be71-f634b75c47be"),
                            CreateAt = new DateTime(2021, 3, 16, 20, 51, 6, 375, DateTimeKind.Local).AddTicks(7897),
                            Email = "lucas.vilas@email.com",
                            Name = "Administrador",
                            Password = "123456",
                            UpdateAt = new DateTime(2021, 3, 16, 20, 51, 6, 376, DateTimeKind.Local).AddTicks(8378)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
